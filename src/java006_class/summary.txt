 변수 : 하나의 값을 저장하기 위한 메모리 기억 공간
 int num = 3;
 int data = 4;
 
 홍길동 90 80 70
 김영희 70 80 60
 
 배열 : 데이터 타입이 같은 데이터를 하나로 묶어놓은 기능
 
 int[] arr = {90, 80, 70};
 int[][] arr = {{90, 80, 70}, {70, 80, 60}};
 String[] name = {"홍길동", "김영희"};
 
 // c언어에서의 사용
 구조체 : 서로 관련이 있는 데이터를 하나로 묶어놓은 기능
 <구조체 정의>
 typeof struct person{
 	char name[10];
 	int ko;
 	int en;
 	int ma;
 	boolean gendar;
 }
 
 <구조체 선언>
 person ps;
  ps.name = {'h','o','n','g'};
  ps.ko=90;
  ps.en=80;
  ps.ma=70;
  ps.gender=true;
  
 person pn;
  pn.name = {'k','i','m'};
  pn.ko=70;
  pn.en=80;
  pn.ma=60;
  pn.gender=false;
 //
 
 =====================================================================================
 
 객체 : 실세계에 존재하는 모든 사물이나 개념들이다.
       실세계(동차, 모니터, 책) 개념(수강, 추리)
       
 객체 모델링 : 객체의 특징(속성)과 기능(동작)을 구분한다. (객체를 프로그램으로 구현하기 위한 분석작업이다.)
 
 홍길동
 객체의 특징(속성) : 이름(홍길동), 나이(30), 성별(남), 
 객레의 기눙(동작) : 개발한다. 달린다.
 
 김영희
 객체의 특징(속성) : 이름(김영희), 나이(28), 성별(여)
 객체의 기능(동작) : 개발한다. 달린다.
 
 클래스(class) : 구조체(멤버변수) + 함수(메소드)
 			   => 객체의 공통점을 찾아내어 그 공통점을 표현하는 것.
 			   
 class Person{
   String name;
   int age;
   char gender;
   
   public void develop(){
     System.out.println("개발한다");
   }
   
   public void run(){
     System.out.println("달린다");
   }
 
 } 
 
 <객체참조변수 선언>
 person ps;
 <객체 생성> // 생성자 호출. 생성자 명은 클래스 명과 같아야 한다. new를 붙여야 한다.(메모리 확보가 됨)
 ps = new Person();
 ps.name = "홍길동";
 ps.age = 30;
 ps.gender = '남';
 ps.develop();
 ps.run();
 
 <객체참조변수 선언>
 person pn;
 <객체 생성>
 pn = new Person();
 pn.name = "김영희";
 pn.age =  28;
 pn.gender = '여';
 pn.develop();
 pn.run();
 
 자바바이트코드 = class 파일
 class 생성시 Method Area에 생성
 class 생성할때 static 작성시 정적필드로 만든다.
 객체참조변수 생성 및 선언시 Stack Area에 생성 및 데이터 주소 가져옴
 class안의 데이터 값들은 Heap Area에 데이터 생성 및 주소 할당
 
 JVM 메모리 구조 Runtime Data Area
 1. method area : 클래스의 정보, 메소드 바이트 코드, 클래스변수(statice ...), 상수(final)
 2. stack area : 지역변수, 매개변수, 객체참조변수
 3. heap area : 클래스, 배열, enum
 
 자바 프로그램의 특징
 1. 플랫폼에 독립적이다.
 2. 자동으로 메모리 관리를 한다.(가비지 컬렉션에서 관리 - PC 레지스터)
 3. 네트워크와 분산환경을 지원한다.
 4. 멀티스레드를 지원한다.
 smartphone - 프로세스
 	전화 - 스레드
 	sns - 스레드
 	게임 - 스레드
 	음악 - 스레드
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  